
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "./theme/typography" as typography;
@use "./theme/layout" as layout;
@use "./theme/attributes" as attributes;

@use '@angular/material' as mat;

html {
  color-scheme: light;
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
    ),
    typography: Roboto,
  ));

  &.dark-mode{
    color-scheme: dark;
  }

  &.red-palette{
    @include mat.theme((
      color: (
        primary: mat.$red-palette,
      )
    ));
  }

  &.green-palette{
    @include mat.theme((
      color: (
        primary: mat.$green-palette,
      )
    ));
  }

  &.azure-palette{
    @include mat.theme((
      color: (
        primary: mat.$azure-palette,
      )
    ));
  }

  &.violet-palette{
    @include mat.theme((
      color: (
        primary: mat.$violet-palette,
      )
    ));
  }
}/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { 
  margin: 0; 
  font-family: Roboto, "Helvetica Neue", sans-serif; 
}

.button-small-corner{
  @include mat.button-overrides((
    outlined-container-shape: var(--mat-sys-corner-extra-small),
    filled-container-shape: var(--mat-sys-corner-extra-small),
  ));
}

* {
  @extend %spacing;
  @extend %flex;
  @extend %utilities;
  box-sizing: border-box;
}

.grid-group{
  display: grid;
}

.sticky{
  top: 0;
  //box-shadow: 0 2px 4px 6px rgba($color: #000000, $alpha: 0.2);
  z-index: 10;
  padding: 1rem 1rem 0;
  background: var(--mat-sys-background);
}

.mat-select-search-input{
  background-color: var(--mat-sys-surface-container) !important;
}

a{
  cursor: pointer;

  &:hover{
    text-decoration: underline;
    color: var(--mat-sys-primary);
  }
}

.mat-mdc-dialog-surface{
  border-radius: var(--mat-sys-corner-medium) !important;
}

.window-nav-bar{
  .mat-mdc-icon-button{
    border-radius: 0 !important;
  
    .mat-mdc-button-persistent-ripple{
        border-radius: 0 !important;
    }
  }
  
  .mat-mdc-icon-button.window-close  .mat-mdc-button-persistent-ripple::before{
    background-color: red !important;
  }
  .mat-mdc-icon-button:hover>.mat-mdc-button-persistent-ripple::before{
    opacity: 0.1 !important;
  }
}



.small-input{
  @include mat.theme((
    density: -5,
  ));

  .mat-mdc-form-field-subscript-wrapper{
    display: none;
  }
}

mat-form-field{
  @include mat.theme((
    density: -4,
  ));
}

.mat-mdc-menu-content{
  button{
    p{
      font-size: 10px;
      color: var(--mat-sys-on-surface-variant);
    }
  }
}

.user-avatar{
  width: 24px;
  border-radius: 24px;
}

::-webkit-scrollbar { display: none; }

.comment-markdown-module{
  .markdown-editor-module{
    textarea{
      min-height: 120px !important;
    }
    .markdown-preview{
      min-height: 120px !important;
    }
  }
}

markdown{
  img{
    width: 100%;
  }
}

mat-checkbox .mdc-label{
  display: flex;
  align-items: center;
  gap: 8px;
}

.card{
  background: var(--mat-sys-surface-container);
  color: var(--mat-sys-on-surface);
  border-radius: 1rem;
}

.container{
  background: var(--mat-sys-background);
}